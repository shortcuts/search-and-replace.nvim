==============================================================================
------------------------------------------------------------------------------
                                                     *SearchAndReplace.toggle()*
                          `SearchAndReplace.toggle`()
Toggle the plugin by calling the `enable`/`disable` methods respectively.

------------------------------------------------------------------------------
                                                     *SearchAndReplace.enable()*
                       `SearchAndReplace.enable`({scope})
Initializes the plugin, sets event listeners and o state.

------------------------------------------------------------------------------
                                                    *SearchAndReplace.disable()*
                          `SearchAndReplace.disable`()
Disables the plugin, clear highlight groups and autocmds, closes side buffers and resets the o state.


==============================================================================
------------------------------------------------------------------------------
                                                      *SearchAndReplace.options*
                           `SearchAndReplace.options`
SearchAndReplace configuration with its default values.

Type ~
`(table)`
Default values:
>lua
  SearchAndReplace.options = {
      -- Prints useful logs about what event are triggered, and reasons actions are executed.
      debug = false,
  }

<
------------------------------------------------------------------------------
                                                      *SearchAndReplace.setup()*
                      `SearchAndReplace.setup`({options})
Define your search-and-replace setup.

Parameters ~
{options} `(table)` Module config table. See |SearchAndReplace.options|.

Usage ~
`require("search-and-replace").setup()` (add `{}` with your |SearchAndReplace.options| table)


 vim:tw=78:ts=8:noet:ft=help:norl:
