==============================================================================
------------------------------------------------------------------------------
                                                      *SearchAndReplace.options*
                           `SearchAndReplace.options`
SearchAndReplace configuration with its default values.

Type ~
`(table)`
Default values:
>lua
  SearchAndReplace.options = {
      -- Prints useful logs about what event are triggered, and reasons actions are executed.
      debug = false,
      -- Creates mappings for you to easily interact with the exposed commands.
      ---@type table
      mappings = {
          -- When `true`, creates all the mappings that are not set to `false`.
          ---@type boolean
          enabled = false,
          -- Sets a global mapping to Neovim, which will trigger the "by pattern" replace function.
          -- When `false`, the mapping is not created.
          ---@type string
          search_and_replace_by_pattern = "<Leader>srp",
          -- Sets a global mapping to Neovim, which will trigger the "by reference" replace function.
          -- When `false`, the mapping is not created.
          ---@type string
          search_and_replace_by_reference = "<Leader>srr",
          -- Sets a global mapping to Neovim, which will trigger the "undo" function.
          -- When `false`, the mapping is not created.
          ---@type string
          undo = "<Leader>sru",
      },
  }

<
------------------------------------------------------------------------------
                                                      *SearchAndReplace.setup()*
                      `SearchAndReplace.setup`({options})
Define your search-and-replace setup.

Parameters ~
{options} `(table)` Module config table. See |SearchAndReplace.options|.

Usage ~
`require("search-and-replace").setup()` (add `{}` with your |SearchAndReplace.options| table)


 vim:tw=78:ts=8:noet:ft=help:norl: